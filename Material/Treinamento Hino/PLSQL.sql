-- Bloco anônimo
DECLARE
  nTOTREG NUMBER;
  
  CURSOR CUR_ESTAB IS
  (SELECT CODESTAB, RAZAOSOCIAL
     FROM GEESTAB
    WHERE CODESTAB > 0);
BEGIN

  SELECT COUNT(*)
    INTO nTOTREG
    FROM GEESTAB
   WHERE CODESTAB > 1;
   
  FOR R IN CUR_ESTAB LOOP  
  
   IF (R.CODESTAB < 3) THEN
   
     UPDATE GEESTAB
        SET NOMEFANTASIA = R.CODESTAB || ' - ' || R.RAZAOSOCIAL
      WHERE CODESTAB = R.CODESTAB;
    
    ELSIF (R.CODESTAB = 3) THEN
   
     UPDATE GEESTAB
        SET NOMEFANTASIA = R.CODESTAB || ' * ' || R.RAZAOSOCIAL
      WHERE CODESTAB = R.CODESTAB;
    
    ELSE 
 
     UPDATE GEESTAB
        SET NOMEFANTASIA = R.RAZAOSOCIAL || ' - ' ||  R.CODESTAB 
      WHERE CODESTAB = R.CODESTAB;
   
    END IF;

  END LOOP;
  
  COMMIT;

END;

-- Procedure
CREATE OR REPLACE PROCEDURE PROC_ATUALIZAESTAB 
(
  pCODESTAB IN NUMBER
)
IS
  nTOTREG NUMBER(1);
BEGIN

  SELECT COUNT(*)
    INTO nTOTREG
    FROM GEESTAB
   WHERE CODESTAB = pCODESTAB;
   
  IF (nTOTREG > 0) THEN
 
   UPDATE GEESTAB
      SET NOMEFANTASIA = 'EXEMPLO PROCEDURE' 
    WHERE CODESTAB = pCODESTAB;
   
  END IF;
    
  COMMIT;

END;

-- EXECUTANDO A PROCEDURE
BEGIN
  PROC_ATUALIZAESTAB(1);
END;

-- Função
CREATE OR REPLACE FUNCTION FCT_ATUALIZAESTAB 
(
  pCODESTAB IN NUMBER
) RETURN NUMBER
IS
  nREGAT  NUMBER(1);
BEGIN

 UPDATE GEESTAB
    SET NOMEFANTASIA = 'EXEMPLO PROCEDURE' 
  WHERE CODESTAB = pCODESTAB;

  nREGAT := SQL%ROWCOUNT;
    
  COMMIT;
  
  RETURN nREGAT;

END;

-- EXECUTANDO A FUNÇÃO
DECLARE
  nRET NUMBER;
BEGIN
  nRET := FCT_ATUALIZAESTAB(10);
  RAISE_APPLICATION_ERROR(-20001, 'NÚMERO DE LINHAS ATUALIZADAS: ' || TO_CHAR(nRET));
END;

-- Função
CREATE OR REPLACE FUNCTION FCT_REMOVEPONTO 
(
  pTEXTO IN VARCHAR2
) RETURN VARCHAR2
IS
BEGIN

  RETURN REPLACE(pTEXTO, '.');

END;

SELECT CODPRODUTO, FCT_REMOVEPONTO(CODPRODUTO)
  FROM FSPRODUTO
  
  -- Função
CREATE OR REPLACE FUNCTION FCT_VALORTOTALNF 
(
  pCODESTAB    IN NUMBER,
  pINDICENFSAI IN NUMBER
) RETURN NUMBER
IS
  nVALORTOTAL NUMBER;
BEGIN
  nVALORTOTAL := 0;
  
  FOR R IN (SELECT CODESTAB, INDICEITEM, SEQUENCIA, INDICENFSAI, QUANTIDADE, VALORUNITARIO
              FROM FSNFITEM
             WHERE CODESTAB = pCODESTAB
               AND INDICENFSAI = pINDICENFSAI) LOOP
  
   nVALORTOTAL := nVALORTOTAL + (R.QUANTIDADE * R.VALORUNITARIO);
   
    FOR S IN (SELECT FSNFITEMIMP.VALORIMPOSTO, FSIMPOSTOS.CLASSIFICACAO
                FROM FSNFITEMIMP,
                     FSIMPOSTOS
               WHERE FSNFITEMIMP.CODESTAB = R.CODESTAB
                 AND FSNFITEMIMP.INDICEITEM = R.INDICEITEM
                 AND FSNFITEMIMP.SEQUENCIA = R.SEQUENCIA
                 AND FSIMPOSTOS.CODIMPOSTO = FSNFITEMIMP.CODIMPOSTO ) LOOP
                 
     IF (S.CLASSIFICACAO = 3) THEN
     
       nVALORTOTAL := nVALORTOTAL + S.VALORIMPOSTO;    
       
     END IF;  

    END LOOP;

  END LOOP;   
  
  RETURN nVALORTOTAL;

END;

SELECT FCT_VALORTOTALNF(1, 51015) FROM DUAL

SELECT NOTAFISCAL, FCT_VALORTOTALNF(CODESTAB, INDICENFSAI) TOTAL
  FROM FSNFSAIDA