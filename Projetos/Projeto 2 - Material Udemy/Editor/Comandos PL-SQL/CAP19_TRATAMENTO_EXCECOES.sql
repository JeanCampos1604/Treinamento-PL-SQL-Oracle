
DECLARE
  VCOD   TALUNO2.COD_ALUNO%TYPE := 1;
  VCIDADE TALUNO2.CIDADE%TYPE;    
  X NUMBER;
BEGIN
  SELECT CIDADE INTO VCIDADE
  FROM TALUNO2
  --WHERE NOME LIKE '%';
  WHERE  cod_aluno = vCod;
  X := 0 / 0;
  DBMS_OUTPUT.PUT_LINE('Cidade: '||VCIDADE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RAISE_APPLICATION_ERROR(-20001,
           'Aluno Inexistente! '||SQLCODE||' '||SQLERRM);
  WHEN TOO_MANY_ROWS THEN
    RAISE_APPLICATION_ERROR(-20002,
           'Registro Duplicado! '||SQLCODE||' '||SQLERRM);
  WHEN ZERO_DIVIDE THEN 
    RAISE_APPLICATION_ERROR (-20003,
           'Não há divisão por 0! ' || SQLCODE || ' ' || SQLERRM);
  WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(-20004,
           'Exceção Desconhecida! '||SQLCODE||' '||SQLERRM);
END;


SELECT * FROM TALUNO2;

CREATE TABLE CONTAS
(
  CODIGO     INTEGER NOT NULL PRIMARY KEY,
  VALOR      NUMBER(10, 2),
  JUROS      NUMBER(10, 2),
  VENCIMENTO DATE
);

INSERT INTO CONTAS VALUES (100, 550, 50, SYSDATE-10);

SELECT * FROM CONTAS;

COMMIT;


--CRIANDO EXCEPTION
DECLARE
   VDT_VENCIMENTO DATE;
   VCONTA  NUMBER := 100; --CODIGO DA CONTA
   ECONTA_VENCIDA EXCEPTION;
BEGIN
  SELECT VENCIMENTO INTO VDT_VENCIMENTO
  FROM CONTAS WHERE CODIGO = VCONTA;
  IF VDT_VENCIMENTO < TRUNC(SYSDATE) THEN
    RAISE ECONTA_VENCIDA;
  END IF;
 EXCEPTION
  WHEN ECONTA_VENCIDA THEN
    DBMS_OUTPUT.PUT_LINE('Conta vencida');
    UPDATE CONTAS SET VALOR = VALOR + JUROS
    WHERE  CODIGO = VCONTA;
    COMMIT;
END;

--VALOR MUDA PARA 600
SELECT * FROM CONTAS;


DECLARE
   EFK_ERRO EXCEPTION;
   PRAGMA EXCEPTION_INIT(EFK_ERRO, -02291);
BEGIN
  INSERT INTO TBAIRRO VALUES ( 100, 100, 'RIO BRANCO');
EXCEPTION
   WHEN EFK_ERRO THEN
     RAISE_APPLICATION_ERROR(-20200, 'Cidade não existe!' );
END;
----



SELECT * FROM TBAIRRO;
SELECT * FROM TCIDADE;


