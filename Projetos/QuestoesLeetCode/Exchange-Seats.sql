CREATE TABLE SEAT2 (
    ID INTEGER PRIMARY KEY,
    STUDENT VARCHAR2(30)
);

INSERT INTO SEAT2 VALUES (1, 'Craigie');
INSERT INTO SEAT2 VALUES (2,'Julius');
INSERT INTO SEAT2 VALUES (3,'Denis');
INSERT INTO SEAT2 VALUES (4,'Isabel');
INSERT INTO SEAT2 VALUES (5,'Windsor');
INSERT INTO SEAT2 VALUES (6, 'Vincent');
INSERT INTO SEAT2 VALUES (7,'Mike');
INSERT INTO SEAT2 VALUES (8,'Russell');
INSERT INTO SEAT2 VALUES (9,'FitzGerald');
INSERT INTO SEAT2 VALUES (10,'Rob');


--RESOLUÇÃO 1
SELECT ID "id",
       ALUNO_ANTERIOR "student"
  FROM (
        SELECT ID,
               LAG(STUDENT) OVER (ORDER BY STUDENT) ALUNO_ANTERIOR
          FROM SEAT
      )
  WHERE MOD(ID,2) = 0
  
UNION

SELECT ID,       
       PROXIMO_ALUNO
  FROM (
        SELECT ID,
               LEAD(STUDENT)OVER (ORDER BY STUDENT) PROXIMO_ALUNO
          FROM SEAT
      )
  WHERE MOD(ID,2) = 1
  AND ID <> (SELECT COUNT(*) FROM SEAT)

UNION 

SELECT ID, STUDENT
  FROM SEAT
  WHERE MOD(ID,2) = 1
  AND ID = (SELECT COUNT(*) FROM SEAT);


--RESOLUÇÃO 2
SELECT id,
       CASE
            WHEN MOD(ID,2) = 0 THEN LAG(STUDENT) OVER (ORDER BY ID)
            WHEN  MOD(ID,2) = 1 AND ID <> (SELECT COUNT(*) FROM SEAT) THEN LEAD(STUDENT) OVER (ORDER BY ID)
            WHEN  MOD(ID,2) = 1 AND ID = (SELECT COUNT(*) FROM SEAT) THEN STUDENT
       END AS student
  FROM SEAT;
  
--RESOLUÇÃO 3
SELECT CASE 
            WHEN MOD(ID,2) = 1 THEN LEAD(ID, 1, ID) OVER (ORDER BY ID ASC)
            WHEN MOD(ID,2) = 0 THEN ID - 1
        END AS ID, STUDENT
FROM SEAT
ORDER BY ID