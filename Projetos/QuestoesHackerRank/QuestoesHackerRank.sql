SELECT DISTINCT CIDADES
  FROM(
SELECT CASE
           WHEN NOME NOT LIKE 'A%' AND NOME NOT LIKE'%A' 
            AND NOME NOT LIKE 'E%' AND NOME NOT LIKE'%E' 
            AND NOME NOT LIKE 'I%' AND NOME NOT LIKE'%I'
            AND NOME NOT LIKE 'O%' AND NOME NOT LIKE'%O'
            AND NOME NOT LIKE 'U%' AND NOME NOT LIKE'%U'
           THEN NOME 
        END AS CIDADES
  FROM TCIDADE
  ) WHERE CIDADES IS NOT NULL;
  
  
SELECT *
  FROM TCIDADE;
 
CREATE TABLE STUDENTS
(
    ID INTEGER PRIMARY KEY,
    NAME VARCHAR(30),
    MARKS INTEGER
);


INSERT INTO STUDENTS VALUES (2,'SAMANTA',85);

SELECT NAME
  FROM (
       SELECT SUBSTR(NAME,-3,3) AS FILTER, NAME
         FROM STUDENTS
         WHERE MARKS > 75
         ORDER BY FILTER, ID
       );
       
       
 
 CREATE TABLE STATION
 (
    LAT_N NUMBER, 
    LONG_W NUMBER
 );
 
 SELECT * FROM STATION;
 
 
SELECT ROUND(LONG_W,4)
  FROM STATION
  WHERE LAT_N = ( SELECT  MIN(LAT_N)
                    FROM STATION
                    WHERE LAT_N > 38.7780
                );
    
    
 SELECT ROUND(LONG_W,4)
  FROM STATION
  WHERE LAT_N IN (SELECT MIN(LAT_N)
                     FROM STATION
                     WHERE LAT_N > 38.7780);
                     
  
DROP TABLE EMPLOYEE;

CREATE TABLE EMPLOYEE
(
    EMPLOYEE_ID INTEGER,
    NAME VARCHAR(50),
    MONTHS INTEGER,
    SALARY INTEGER,
    PRIMARY KEY (EMPLOYEE_ID)
);

INSERT INTO Employee VALUES (12228, 'Rose', 15, 1968);
INSERT INTO Employee VALUES (33645, 'Angela', 1, 3443);
INSERT INTO Employee VALUES (45692, 'Frank', 17, 1608);
INSERT INTO Employee VALUES (56118, 'Patrick', 7, 1345);
INSERT INTO Employee VALUES (59725, 'Lisa', 11, 2330);
INSERT INTO Employee VALUES (74197, 'Kimberly', 16, 4372);
INSERT INTO Employee VALUES (78454, 'Bonnie', 8, 1771);
INSERT INTO Employee VALUES (83565, 'Michael', 6, 2017);
INSERT INTO Employee VALUES (98607, 'Todd', 5, 3396);
INSERT INTO Employee VALUES (99989, 'Joe', 9, 3573);

SELECT * 
  FROM EMPLOYEE;

SELECT MAX_EARNINGS || ' ' || COUNT(*)
  FROM
      (
       SELECT SALARY*MONTHS AS EARNINGS,
              MAX(SALARY*MONTHS) OVER() AS MAX_EARNINGS
         FROM EMPLOYEE
      )
    WHERE EARNINGS = MAX_EARNINGS
    GROUP BY MAX_EARNINGS;